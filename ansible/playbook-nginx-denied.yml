---

- name: 'Gather facts'
  hosts: 'all'
  gather_facts: true

- name: 'Install Nginx but deny all access to the nginx-denied namespace'
  hosts: 'k3s1'
  gather_facts: false
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the nginx-denied namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: v1
          kind: Namespace
          metadata:
            labels:
              kubernetes.io/metadata.name: nginx-denied
            name: nginx-denied

    - name: 'Create the network policy for the nginx-denied namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: "cilium.io/v2"
          kind: CiliumNetworkPolicy
          metadata:
            name: nginx-denied
            namespace: nginx-denied
          spec:
            endpointSelector: {}
            egress:
            - {}
            ingress:
            - {}

    - name: 'Install Nginx via helm chart'
      # running this from vagrant fails, if we target localhost directly
      delegate_to: 'localhost'
      kubernetes.core.helm:
        release_name: 'nginx-denied'
        chart_ref: 'oci://registry-1.docker.io/bitnamicharts/nginx'
        release_namespace: 'nginx-denied'
        values:
          containerPorts:
            http: 8080
            https: null
          service:
            type: ClusterIP
          tls:
            enabled: false
          networkPolicy:
            enabled: false
          ingress:
            enabled: true
            hostname: "nginx-denied.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'Wait until all pods in the nginx-denied namespace are running'
      delegate_to: localhost
      become: false
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: nginx-denied
      register: pod_list
      until:
        '
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
        '
      retries: 12
      delay: 10

    - name: 'Wait until all pods in the nginx-denied namespace are ready'
      delegate_to: localhost
      become: false
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: nginx-denied
      register: pod_list_ready
      until:
        '
        pod_list_ready | json_query("resources[*].status.containerStatuses[*].ready") | unique | sort == [[true]]
        '
      retries: 12
      delay: 10
